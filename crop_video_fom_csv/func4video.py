from ctypes import *
import random
import os
import cv2
import time
import argparse
from queue import Queue
import numpy as np
import math


def add_mask(points,image):
    # points=mask_point: a numpy array generated by functions.py
    mask = np.zeros(image.shape[:2], dtype=np.uint8)
    roi_points = np.array(points, dtype = np.int32)
    cv2.fillConvexPoly(mask, roi_points, 255)
    masked_img = cv2.bitwise_and(image, image, mask=mask)
    return masked_img

def cord_trans(x,y,M):
    #--- x and y are the input coordinate of detection result, M is the transformation matrix
    h = M.reshape(M.shape[0]*M.shape[1],1)
    bottom = h[6]*x+h[7]*y+h[8]
    x2 = (h[0]*x+h[1]*y+h[2])/bottom
    y2 = (h[3]*x+h[4]*y+h[5])/bottom
    return abs(x+x2+60)/1280*608,abs(y2+50)/720*608
    
def apd_lists(list1,M):
    list_fin = []
    for i in list1:
        list_num = []
        list_upper = []
        list_upper.append(str(i[0]))
        list_upper.append(str(i[1]))
        # print(list_sub)
        new_tempx, new_tempy = cord_trans(i[2][0], i[2][1],M)
        list_num.append(float(new_tempx))
        list_num.append(float(new_tempy))
        list_num.append(i[2][2])
        list_num.append(i[2][3])
        list_num =tuple(list_num)
        # print(list_num)
        list_upper.append(list_num)
        # print(list_upper)
        list_fin.append(tuple(list_upper))
        # print(len(list_fin))
    return list_fin